//IMP Sieve of primes
//B. T-primes
#include <iostream>
#include <utility>
#include <bitset>
#include <bits/stdc++.h>
#include <unordered_map>
#include <cmath>
# define int int64_t
using namespace std;
int ar[(int)1e6+10];
set<long long int> tprime;

void t_primes(){
        tprime.insert(4);
        for(int i=3;i<(int)1e6+1;i+=2){
            if(ar[i]==0){
                tprime.insert(i*i);
                for(int j=i;j<=1e6;j+=i){
                    ar[j]=1;
                }
            }
        }
}
/* Utility function to print an arrray */
void printarrray(int arr[], int size)
{
   for (int i = 0; i < size; i++)
   cout << arr[i];
   cout << endl;
}


int32_t main(){
    int length;
   cin>>length;
    int val;
   //concept of sieve
   t_primes();
   for( int i=0;i<length; i++){
        cin>>val;
            if(tprime.find(val)!=tprime.end()){
            cout<<"YES"<<endl;
           }
           else{
            cout<<"NO"<<endl;
           }

   }

    return 0;
}
