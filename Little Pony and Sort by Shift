//B. Little Pony and Sort by Shift
//Needs amendment
#include <iostream>
#include <utility>
#include <bitset>
#include <bits/stdc++.h>
#include <unordered_map>
#include <cmath>

using namespace std;

/* Utility function to print an array */
void printarrray(int arr[], int size)
{
   for (int i = 0; i < size; i++)
   cout << arr[i];
   cout << endl;
}

void reverseArray(int arr[], int start,
                            int end)
{
    while (start < end)
    {
        swap(arr[start], arr[end]);
        start++;
        end--;
    }
}

/* Function to right rotate arr[]
of size n by d */
void rightRotate(int arr[], int d, int n)
{
    reverseArray(arr, 0, n-1);
    reverseArray(arr, 0, d-1);
    reverseArray(arr, d, n-1);
}

int main(){
    int len;cin>>len;
    int arr[len];
    int min_val=INT_MAX;
    int index=-1;
    for(int i=0;i<len;i++){
          cin>>arr[i];
          if(arr[i]<min_val){
            min_val=arr[i];
            index=i;
          }
     }
     if(len==1){
        cout<<0<<endl;
        return 0;
     }
     if(len==2){
        if(arr[0]>arr[1]){
            cout<<1<<endl;
        }
        else{
            cout<<0<<endl;
        }
        return 0;
     }
     int rotation=(len-index)%len;
     //cout<<rotation<<" "<<index<<" "<<endl;
    //Rotate right
     rightRotate(arr,rotation,len);
     bool notinc=true;
     for(int i=1;i<len;i++){
        if(arr[i]<arr[i-1]){
            notinc=false;
            break;
        }

     }
     if(notinc){
        cout<<rotation<<endl;
     }
     else{
        cout<<-1<<endl;
     }

    return 0;
}
