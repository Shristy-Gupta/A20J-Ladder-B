//B. Suffix Structures
#include <iostream>
#include <utility>
#include <bitset>
#include <bits/stdc++.h>
#include <unordered_map>
#include <cmath>
#include <cstdint>
#include <map>
using namespace std;


int main(){
    map<char,int> m1,m2;
    string s,t; cin>>s>>t;
    for(char i:s){
        m1[i]++;
    }
    for(char i:t){
        m2[i]++;
    }
    for(int i=0;i<26;i++){
        m1[char('a'+i)]+=0;
    }
    // this will tell if we need automation or not?
    bool flag=true;
    for(auto i:m1){
        if(i.second<m2[i.first]){
            cout<<"need tree"<<endl;
            return 0;
        }
        else if(i.second>m2[i.first]){
            flag=false;

        }
    }
    int pos=0;
    //This will tell if need  array or not
    bool f2=true;
    for(int i=0;i<s.length();i++){
        if(s[i]==t[pos]) pos++;
        if(pos==t.length()) break;
    }
    if(pos!=t.length()){
        f2=false;
    }
    if(!f2 && !flag){
        cout<<"both"<<endl;
    }
    else if(!f2){
        cout<<"array"<<endl;
    }
    else{
        cout<<"automaton"<<endl;
    }

    return 0;
}
